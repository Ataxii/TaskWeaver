name: Build for slsa
on:
  release:
    types: [published]
      
jobs:
  build:
    runs-on: "ubuntu-latest"
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: pip install build
      - name: Generate checksum
        id: hash
        run: |
          # Install 'build' and create sdist & wheel
          python -m pip install build
          python -m ensurepip --upgrade
          python -m pip install -r requirements.txt
          python -m build

          # Gather hashes of all files
          set -euo pipefail
          cd dist && echo "hashes=$(sha256sum * | base64 -w0)" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v4
        with:
          path: dist/
          
  provenance:
    needs: [build]
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.9.0
    permissions:
      actions: read
      id-token: write
      contents: write
    with:
      base64-subjects: ${{ needs.build.outputs.hashes }}
      upload-assets: true
      draft-release: true
  
  publish:
    needs: ["build", "provenance"]
    permissions:
      contents: write
    runs-on: "ubuntu-latest"
    steps:
     # Download the built distributions
      - uses: "actions/download-artifact@v4"
        with:
          path: "dist/"
             # Publish distributions to PyPI
     #- uses: "pypa/gh-action-pypi-publish@v4"
     #  with:
     #    user: __token__
     #    password: ${{ secrets.PYPI_TOKEN }}
        
  generate_sbom:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Generate Python SBOM
        uses: CycloneDX/gh-python-generate-sbom@v2
        with:
          input: ./requirements.txt
          output: ./generated_bom.json
          format: json  # output format  (json)
      - name: Generate Python SBOM
        uses: CycloneDX/gh-python-generate-sbom@v2
        with:
          input: ./requirements.txt
          output: ./generated_bom.xml
          format: json  # output format  (xml)
          
      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v2
        with:
          name: sbom
          path: |
            ./generated_bom.json
            ./generated_bom.xml
    
